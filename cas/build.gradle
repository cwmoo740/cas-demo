buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.'springboot.version'}"
    }
}

apply plugin: 'org.springframework.boot'
apply from: 'http://dl.bintray.com/scalding/generic/waroverlay.gradle'
apply from: 'https://raw.githubusercontent.com/apereo/cas/5.2.x/gradle/overrides.gradle'
apply plugin: 'idea'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

springBoot {
    mainClass = "org.springframework.boot.loader.WarLauncher"
}

bootRepackage {
    mainClass = "org.apereo.cas.web.CasWebApplication"
    executable = false
    excludeDevtools = false
}

bootRun {
    addResources = true
    classpath = sourceSets.main.compileClasspath
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://build.shibboleth.net/nexus/content/repositories/releases/' }
}

dependencies {
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.0'
    compile "org.apereo.cas:cas-server-webapp-tomcat:${project.'cas.version'}@war"
    compile group: 'org.apereo.cas', name: 'cas-server-support-json-service-registry', version: "${project.'cas.version'}"
    compile group: 'org.apereo.cas', name: 'cas-server-support-jdbc-authentication', version: "${project.'cas.version'}"
    compile group: 'org.apereo.cas', name: 'cas-server-webapp-config-security', version: "${project.'cas.version'}"
    compile group: 'org.apereo.cas', name: 'cas-server-support-cookie', version: "${project.'cas.version'}"
    compile group: 'org.apereo.cas', name: 'cas-server-support-generic', version: "${project.'cas.version'}"
    compile group: 'org.apereo.cas', name: 'cas-server-support-actions', version: "${project.'cas.version'}"
    compile group: 'org.apereo.cas', name: 'cas-server-support-reports', version: "${project.'cas.version'}"
    compile group: 'org.apereo.cas', name: 'cas-server-support-jdbc', version: "${project.'cas.version'}"
    compile group: 'org.apereo.cas', name: 'cas-server-support-jdbc-drivers', version: "${project.'cas.version'}"
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.2'
}

task resolveDependencies {
    setDescription "Resolves all projects dependencies from the repository."
    setGroup "Build Server"

    doLast {
        project.buildscript.configurations.forEach { configuration ->
            if (configuration.canBeResolved) {
                configuration.resolve()
            }
        }

        project.configurations.forEach { configuration ->
            if (configuration.canBeResolved) {
                configuration.resolve()
            }
        }
    }
}

task copyConfig(type: Exec, description: "Copy CAS configuration to src/main/resources") {
    commandLine './scripts/config'
}

processResources.dependsOn(copyConfig)

war {
    baseName 'cas'
    includeWarJars = true
    entryCompression = ZipEntryCompression.STORED
}

task run(group: "build", description: "Run the CAS web application in embedded container mode") {
    dependsOn build
    doLast {
        def casRunArgs = Arrays.asList(project.'cas.run.jvmArgs'.split(" "))
        println "${casRunArgs}"
        javaexec {
            main = "-jar"
            jvmArgs = casRunArgs
            args = ["build/libs/cas.war"]

            logger.info "Started ${commandLine}"
        }
    }
}


task debug(group: "build", description: "Debug the CAS web application in embedded mode on port 5005") {
    dependsOn build
    doLast {
        def casDebugArgs = Arrays.asList(project.'cas.debug.jvmArgs'.split(" "))

        javaexec {
            main = "-jar";
            jvmArgs = casDebugArgs
            args = ["build/libs/cas.war"]

            logger.info "Started ${commandLine}"
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}

task casVersion() {
    doFirst {
        println "${project.'cas.version'}"
    }
}